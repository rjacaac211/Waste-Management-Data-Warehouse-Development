# Create a grouping sets query
SELECT
    s.Stationid,
    t.TruckType,
    SUM(f.Wastecollected) AS TotalWasteCollected
FROM
    FactTrips f
JOIN
    DimStation s ON f.Stationid = s.Stationid
JOIN
    DimTruck t ON f.Truckid = t.Truckid
GROUP BY GROUPING SETS (
    (s.Stationid, t.TruckType),
    s.Stationid,
    t.TruckType,
    ()
)
ORDER BY
    s.Stationid,
    t.TruckType;


# Create a rollup query
SELECT
    d.Year,
    s.City,
    f.Stationid,
    SUM(f.Wastecollected) AS TotalWasteCollected
FROM
    FactTrips f
JOIN
    DimDate d ON f.Dateid = d.Dateid
JOIN
    DimStation s ON f.Stationid = s.Stationid
GROUP BY ROLLUP (d.Year, s.City, f.Stationid)
ORDER BY
    d.Year DESC,
    s.City,
    f.Stationid;


# Create a cube query
SELECT
    d.Year,
    s.City,
    f.Stationid,
    AVG(f.Wastecollected) AS AverageWasteCollected
FROM
    FactTrips f
JOIN
    DimDate d ON f.Dateid = d.Dateid
JOIN
    DimStation s ON f.Stationid = s.Stationid
GROUP BY CUBE (d.Year, s.City, f.Stationid)
ORDER BY
    d.Year DESC,
    s.City,
    f.Stationid;


# Create a materialized view
CREATE MATERIALIZED VIEW max_waste_stats AS 
SELECT
    s.City,
    s.Stationid,
    t.TruckType,
    MAX(f.Wastecollected) AS MaxWasteCollected
FROM
    FactTrips f
JOIN
    DimStation s ON f.Stationid = s.Stationid
JOIN
    DimTruck t ON f.Truckid = t.Truckid 
GROUP BY
    s.City,
    s.Stationid,
    t.TruckType
WITH DATA;
